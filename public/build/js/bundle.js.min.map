{"version":3,"sources":["tags.js"],"names":["tagsInput","document","querySelector","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","forEach","tag","etiqueta","createElement","classList","add","ondblclick","eliminarTag","appendChild","actualizarInputHidden","e","target","remove","filter","value","toString","split","addEventListener","keyCode","trim","preventDefault"],"mappings":"CAAA,WAEA,MAAAA,EAAAC,SAAAC,cAAA,eAEA,GAAAF,EAAA,CAEA,MAAAG,EAAAF,SAAAC,cAAA,SACAE,EAAAH,SAAAC,cAAA,iBAEA,IAAAG,EAAA,GAwBA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAG,QAAAC,IACA,MAAAC,EAAAT,SAAAU,cAAA,MACAD,EAAAE,UAAAC,IAAA,mBACAH,EAAAH,YAAAE,EACAC,EAAAI,WAAAC,EACAZ,EAAAa,YAAAN,KAEAO,IAGA,SAAAF,EAAAG,GACAA,EAAAC,OAAAC,SACAf,EAAAA,EAAAgB,OAAAZ,GAAAA,IAAAS,EAAAC,OAAAZ,aACAU,IAGA,SAAAA,IACAb,EAAAkB,MAAAjB,EAAAkB,WAxCA,KAAAnB,EAAAkB,QACAjB,EAAAD,EAAAkB,MAAAE,MAAA,KACAlB,KAIAN,EAAAyB,iBAAA,YAEA,SAAAP,GACA,GAAA,KAAAA,EAAAQ,QAAA,CAEA,GAAA,KAAAR,EAAAC,OAAAG,MAAAK,QAAAT,EAAAC,OAAAG,MAAA,EACA,OAEAJ,EAAAU,iBACAvB,EAAA,IAAAA,EAAAa,EAAAC,OAAAG,MAAAK,QACA3B,EAAAsB,MAAA,GACAhB,SA7BA","file":"bundle.js","sourcesContent":["(function() { //se ejecuta inmediatamente\r\n\r\n    const tagsInput = document.querySelector('#tags_input'); // id\r\n    \r\n    if(tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags'); //seleccionar el elemento con el id 'tags' y se van instertando en tags\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]'); //name\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambio en el input\r\n        tagsInput.addEventListener('keypress', guardarTag); //cada cosa que se coloca se guarda\r\n\r\n        function guardarTag(e) {\r\n            if(e.keyCode === 44) { //44 es la coma que hace la separacion\r\n\r\n                if(e.target.value.trim() === '' || e.target.value < 1) { //controla que no deje espacio en blanco\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()]; // '...tags' copia las etiquetas actuales y trim para borrar espacios en blanco\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI'); // creamos un elemento li osea el punto\r\n                etiqueta.classList.add('formulario__tag') //se agrega las etiquetas con la clase formulario__tag\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag; //doble click elimina\r\n                tagsDiv.appendChild(etiqueta); //agregando\r\n            })\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) { // 'e' selecciona evento\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent); //trae a todos los tags que no sea al que no le di click y el filter retarna un nuevo arreglo\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() { //agregamos funcion para agregar o quitar etiquetas del array\r\n            tagsInputHidden.value = tags.toString(); //converitr el arreglo dentro de un string\r\n        }\r\n    }\r\n\r\n})(); //'()' llama a la funcion"]}